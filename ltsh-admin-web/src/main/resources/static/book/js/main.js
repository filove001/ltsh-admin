function CookieFetcher(){ } CookieFetcher.prototype.byimpl = function(){ return "cookie"; } CookieFetcher.prototype.get = function(name){ var reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)"); var values = document.cookie.match(reg); if (values) return unescape(values[2]); else return null; } CookieFetcher.prototype.getIntValue = function(name) { var value = this.get(name); if (value == "" || value == null) { return 0; } else { return parseInt(value); } } CookieFetcher.prototype.set = function (name, value, ms, path) { if (path){} else {path="/";} if (isNaN(ms)) { document.cookie = name + "=" + escape(value) + ";path=" + path; } else { var exp = new Date(); exp.setTime(exp.getTime() + ms); document.cookie = name + "=" + escape(value) + ";path=" + path + ";expires=" + exp.toGMTString(); } } CookieFetcher.prototype.remove = function (name) { this.set(name, 1, -1); } CookieFetcher.prototype.clear = function () { var keys = document.cookie.match(/[^ =;]+(?=\=)/g); if (keys) { for (var i = keys.length; i--;) document.cookie = keys[i] + "=0;expires=" + new Date(0).toUTCString(); } } function LocalStorageFetcher() {} LocalStorageFetcher.prototype.byimpl = function(){ return "localStorage"; } LocalStorageFetcher.prototype.get = function (name) { return window.localStorage.getItem(name); } LocalStorageFetcher.prototype.getIntValue = function(name) { var value = this.get(name); if (value == "" || value == null) { return 0; } else { return parseInt(value); } } LocalStorageFetcher.prototype.set = function (name, value, ms, path) { window.localStorage.setItem(name, value); } LocalStorageFetcher.prototype.remove = function (name) { window.localStorage.removeItem(name); } LocalStorageFetcher.prototype.clear = function () { window.localStorage.clear(); } var fetcher = window.localStorage ? new LocalStorageFetcher() : new CookieFetcher(); var helper = { "$" : function(id) { return document.getElementById(id); }, cookie : new CookieFetcher(), store : window.localStorage ? new LocalStorageFetcher() : new CookieFetcher(), isMobile : function() { return navigator.userAgent.match(/(iPhone|iPod|Android|ios)/i); }, log : function(msg) { if (console) { console.log(msg); } } } /*utils.js*/ var third = { tongji : function() { document.writeln('
Õ¾³¤Í³¼Æ<\/div>'); var _hmt = _hmt || []; (function() { var hm = document.createElement("script"); hm.src = "https://hm.baidu.com/hm.js?fe5aa594affb49537c7d072ba35fa942"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(hm, s); })(); try { rmpop(); } catch(ex){} setTimeout("rmpop()", 5000); }, report4Seo : function() { document.writeln(""); } } catch(ex){if(window.console)console.log(ex)} } } function dp(mustShow) { if (mustShow == null) mustShow = false; if (!mustShow && document.referrer && document.referrer.indexOf("baidu") > -1) { return; } if (!mustShow) { if (!window.chapterId) return; var cname = "cv"; var currentCount = helper.cookie.getIntValue(cname); currentCount++; helper.cookie.set(cname, currentCount, getResetTime(), '/'); var r = currentCount % 10; if (r == 3 || r == 6 || r == 9) { } else { return; } } var cax = getWhich("cax", 0, 99); var index = cax % 1; if (index == 0) { try{ document.writeln(" "); } catch(ex){if(window.console)console.log(ex)} } }